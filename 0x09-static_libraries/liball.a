!<arch>
0-isupper.c/    0           0     0     644     184       `
#include "main.h"
/**
 * _isupper - uppercase letters
 * @c: char to check
 *
 * Return: 0 or 1
 */
int _isupper(int c)
{
	if (c >= 'A' && c <= 'Z')
		return (1);
	else
	return (0);
}
0-memset.c/     0           0     0     644     0         `
0-putchar.c/    0           0     0     644     260       `
#include <unistd.h> 
 
/** 
 * _putchar - writes the character c to stdout 
 * @c: The character to print 
 * 
 * Return: On success 1. 
 * On error, -1 is returned, and errno is set appropriately. 
 */ 
int _putchar(char c) 
{ 
 return (write(1, &c, 1)); 
} 
0-strcat.c/     0           0     0     644     0         `
100-atoi.c/     0           0     0     644     0         `
1-isdigit.c/    0           0     0     644     0         `
1-memcpy.c/     0           0     0     644     0         `
1-strncat.c/    0           0     0     644     0         `
2-strchr.c/     0           0     0     644     0         `
2-strlen.c/     0           0     0     644     0         `
2-strncpy.c/    0           0     0     644     0         `
3-islower.c/    0           0     0     644     0         `
3-puts.c/       0           0     0     644     217       `
#include "main.h"
void _puts(char *str);
#include<stdio.h>
/**
 * main - Entry point
 *
 * Return: Always 0 (Success)
 */
int main(void)
{
	puts("\"Programming is like building a multilingual puzzle");
	return (0);
}

3-strcmp.c/     0           0     0     644     0         `
4-isalpha.c/    0           0     0     644     0         `
4-strpbrk.c/    0           0     0     644     0         `
5-strstr.c/     0           0     0     644     0         `
6-abs.c/        0           0     0     644     0         `
9-strcpy.c/     0           0     0     644     0         `
main.c/         0           0     0     644     148       `
#include "main.h"

int main(void)
{
    _puts("\"At the end of the day, my goal was to be the best hacker\"\n\t- Kevin Mitnick");
    return (0);
}
_putchar.c/     0           0     0     644     247       `
#include <unistd.h>

/**
 * _putchar - writes the character c to stdout
 * @c: The character to print
 *
 * Return: On success 1.
 * On error, -1 is returned, and errno is set appropriately.
 */
int _putchar(char c)
{
	return (write(1, &c, 1));
}

